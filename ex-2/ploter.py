import numpy as np
import matplotlib.pyplot as plt

# Provided data
data = [
    # Rastrigin
    np.array(
        [
            (1.00, 6.814861609073634),
            (2.00, 4.562676598832568),
            (3.00, 3.6890098774744398),
            (4.00, 3.282257153902997),
            (5.00, 2.2374981617558882),
            (6.00, 2.11283365563392),
            (7.00, 2.1277194876772363),
            (8.00, 2.0189754300971545),
            (9.00, 2.002145094817364),
            (10.00, 1.8100106533015259),
            (11.00, 1.9096524272435462),
            (12.00, 2.051737545382879),
            (13.00, 1.8177345550983068),
            (14.00, 2.0848224574880088),
            (15.00, 1.8182166594524907),
            (16.00, 1.8286883507591667),
            (17.00, 1.6861958682456992),
            (18.00, 1.8098612526614521),
            (19.00, 1.6415368964121442),
            (20.00, 2.0614132806895413),
            (21.00, 1.9363923119196287),
            (22.00, 1.9313924046400837),
            (23.00, 1.7648852371620591),
            (24.00, 1.6480200354170282),
            (25.00, 1.9106104540094404),
            (26.00, 2.0166102156973778),
            (27.00, 1.7588190807932458),
            (28.00, 1.9111254776591486),
            (29.00, 1.798550868875923),
            (30.00, 1.619285592529994),
            (31.00, 1.6262336159478314),
            (32.00, 1.7723457855640534),
            (33.00, 1.4630241589892363),
            (34.00, 1.784184493723086),
            (35.00, 1.8763599361861691),
            (36.00, 1.708848084722037),
            (37.00, 1.851819924519925),
            (38.00, 1.6928200321141935),
            (39.00, 1.7541449699649077),
            (40.00, 1.6599132577835778),
            (41.00, 1.6117546531135283),
            (42.00, 1.7339738377830713),
            (43.00, 1.7702843414553229),
            (44.00, 1.7136149233419942),
            (45.00, 1.6193531912451018),
            (46.00, 1.9019307361604985),
            (47.00, 1.674206668176925),
            (48.00, 2.0016618668055197),
            (49.00, 2.0635784470668033),
        ]
    ),
    # Gierwank
    np.array(
        [
            (1.00, 0.2989057821456536),
            (2.00, 0.18390237295276843),
            (3.00, 0.15004116805916515),
            (4.00, 0.12347629379509552),
            (5.00, 0.10709808285356194),
            (6.00, 0.08269021019634475),
            (7.00, 0.0698613375789959),
            (8.00, 0.05806816596742027),
            (9.00, 0.06979870893726753),
            (10.00, 0.07311173105106862),
            (11.00, 0.07116439890782936),
            (12.00, 0.06106556702742836),
            (13.00, 0.05974960860464882),
            (14.00, 0.05863983283494407),
            (15.00, 0.05666992662457397),
            (16.00, 0.06882617892493283),
            (17.00, 0.06951593911141138),
            (18.00, 0.05308156924558051),
            (19.00, 0.0599345296111464),
            (20.00, 0.059422148288122735),
            (21.00, 0.0623604112867913),
            (22.00, 0.07247517096673346),
            (23.00, 0.062100355254072974),
            (24.00, 0.061875640045798166),
            (25.00, 0.057491028882540894),
            (26.00, 0.07143990506263495),
            (27.00, 0.06934986008768278),
            (28.00, 0.06549665220673814),
            (29.00, 0.06503262471402232),
            (30.00, 0.0672079526345383),
            (31.00, 0.06466373498630829),
            (32.00, 0.070666752028075),
            (33.00, 0.057417215552845756),
            (34.00, 0.06956931411255043),
            (35.00, 0.05782447089297019),
            (36.00, 0.05904411509126335),
            (37.00, 0.06297424717079504),
            (38.00, 0.055583883125075825),
            (39.00, 0.05752804060393792),
            (40.00, 0.056455582591443496),
            (41.00, 0.0628557984578454),
            (42.00, 0.0532682960044305),
            (43.00, 0.06829385927755503),
            (44.00, 0.053273415919944646),
            (45.00, 0.06593599407103123),
            (46.00, 0.055285566080819644),
            (47.00, 0.05458369793256248),
            (48.00, 0.06606605599564154),
            (49.00, 0.0623150601985371),
        ]
    ),
    # Drop wave
    np.array(
        [
            (1.00, -0.7211807997380766),
            (2.00, -0.8209508331773959),
            (3.00, -0.860009342658425),
            (4.00, -0.8898066322100848),
            (5.00, -0.9112747104859094),
            (6.00, -0.9035674692160705),
            (7.00, -0.903371919185459),
            (8.00, -0.9003493793525198),
            (9.00, -0.9245448872678338),
            (10.00, -0.9135766683439038),
            (11.00, -0.9132661619131209),
            (12.00, -0.9150213290130721),
            (13.00, -0.9086098936910129),
            (14.00, -0.9186018409882359),
            (15.00, -0.90326990733692),
            (16.00, -0.9119796268918212),
            (17.00, -0.9153277331214804),
            (18.00, -0.9176613494496005),
            (19.00, -0.906264597474873),
            (20.00, -0.919374787443449),
            (21.00, -0.9204985524828219),
            (22.00, -0.910929444295246),
            (23.00, -0.9256525035036886),
            (24.00, -0.9155770651387456),
            (25.00, -0.9170054893794855),
            (26.00, -0.9023188980227692),
            (27.00, -0.919128582820504),
            (28.00, -0.9199266665206604),
            (29.00, -0.9110610011416429),
            (30.00, -0.9276400856812415),
            (31.00, -0.9215571804229721),
            (32.00, -0.9123134213701541),
            (33.00, -0.916591930725118),
            (34.00, -0.9114086518544632),
            (35.00, -0.9199375177817295),
            (36.00, -0.9178952030989167),
            (37.00, -0.9130860844184393),
            (38.00, -0.9100239882761456),
            (39.00, -0.9227051504915744),
            (40.00, -0.9145653014238431),
            (41.00, -0.9115674567145351),
            (42.00, -0.9121989853062271),
            (43.00, -0.9118213960770037),
            (44.00, -0.9182703070004844),
            (45.00, -0.9198591105295182),
            (46.00, -0.9212835168399267),
            (47.00, -0.9191627328418462),
            (48.00, -0.9145254198168393),
            (49.00, -0.9152783808945886),
        ]
    ),
]
func_names = ["Rastrigin", "Griewank", "Drop Wave"]
# Real minimum values
real_min_values = {"Drop wave": -1, "Rastrigin": 0, "Gierwank": 0}

# Calculate absolute errors and MSEs
abs_errors = []
mses = []

for func_data in data:
    func_name = ""
    x = func_data[:, 0]
    y_true = func_data[:, 1]

    if np.array_equal(func_data, data[0]):
        func_name = "Rastrigin"
    elif np.array_equal(func_data, data[1]):
        func_name = "Gierwank"
    elif np.array_equal(func_data, data[2]):
        func_name = "Drop wave"

    y_pred = real_min_values.get(func_name)
    abs_error = np.abs(y_true - y_pred)
    mse = abs_error**2
    abs_errors.append(abs_error)
    mses.append(mse)

# Plotting
plt.figure(figsize=(12, 6))

# Absolute Error
plt.subplot(1, 2, 1)
plt.grid()
for i, abs_error in enumerate(abs_errors):
    plt.scatter(x, abs_error)
    plt.plot(x, abs_error, "--", label=f"Funkcja {func_names[i%3]}")
plt.title("Wpływ liczby iteracji - błąd absolutny")
plt.xlabel("liczba iteracji")
plt.ylabel("błąd absolutny")
plt.yscale("log")
plt.legend()

# Mean Squared Error (MSE)
plt.subplot(1, 2, 2)
for i, mse in enumerate(mses):
    plt.scatter(x, mse)
    plt.plot(x, mse, label=f"Function {i+1}")
plt.title("Mean Squared Error (MSE)")
plt.grid()
plt.xlabel("Mutation Probability")
plt.ylabel("MSE")
plt.yscale("log")
plt.legend()

plt.tight_layout()
plt.show()
